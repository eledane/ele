<?php
use Drupal\image\Entity\ImageStyle;
use Drupal\file\Entity\File;
use Drupal\Core\Url; 


//only for development,remove it when deploy on production
require_once('modules/devel/kint/kint/Kint.class.php');
/**
 * @file
 * Functions to support theming in the ele theme.
 */

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function ele_theme_suggestions_page_alter(array &$suggestions, array $variables) {

      if ($node = \Drupal::routeMatch()->getParameter('node')) {
            $content_type = $node->bundle();
            $suggestions[] = 'page__'.$content_type;
       }


  }


/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */

function ele_preprocess_page(&$variables) {

      //works page
      $current_path = \Drupal::service('path.current')->getPath();
      $path_alias = \Drupal::service('path.alias_manager')->getAliasByPath($current_path);

      if( $path_alias == '/works'){
        
       $terms = \Drupal::service('entity_type.manager')->getStorage("taxonomy_term")->loadTree('project_category', $parent = 0, $max_depth = NULL, $load_entities = FALSE);

      $variables['product_category'] = '<li class="filter" data-filter="all">'. t('all'). '</li>' . "\n";

        foreach ( $terms as $term ){

          $variables['product_category'] .= '<li class="filter" data-filter="'. $term->name .'">'. $term->name .'</li>' . "\n";

          }
       
        $query = \Drupal::entityQuery('node')
            ->condition('status', 1)
            ->condition('type', 'project');
        
        $nids = $query->execute();
        $nodes = entity_load_multiple('node', $nids);

        $variables['project_lists'] = '';
         foreach( $nodes as $node ) {
           //get node title
           $title = $node->getTitle(); 

            //get taxonomy name
           $cat = $node->get('field_project_category')->getString();
           $term = \Drupal\taxonomy\Entity\Term::load($cat);
           $cat_name = $term->getName();

            //original image path
           $img_id = $node->get('field_project_header_background')->getValue();
           $img = File::load($img_id[0]['target_id']);


           //$img_header ='/' . drupal_get_path('theme','ele') . '/images/work/2.jpg';
           $img_header = ImageStyle::load('project_list_expand_img')->buildUrl($img->getFileUri());
          // $img_pure = explode("?itok=", $img_header );

           $img_list = ImageStyle::load('project_list_image')->buildUrl($img->getFileUri());
            //alias url of a node 
            $alias = \Drupal::service('path.alias_manager')->getAliasByPath('/node/'.$node->get('nid')->value);

            $variables['project_lists'] .= '<li class="thumbnail mix ' . $cat_name . ' mix_all">
              <a href="' . $img_header . '" class="lightbox" data-caption="<a href=\'' . $alias . '\'>' . $title . '</a>">
                <img src="' . $img_list . '" alt="thumbnail">
                <div class="projectinfo">
                  <div class="meta caption">
                    <h4>' . $title . '</h4>
                  </div>
                </div>
              </a>
            </li>' . "\n";
            
          }

        }


      //front page
      $is_front = \Drupal::service('path.matcher')->isFrontPage();

        if($is_front == TRUE)  {
    
          // for recent work section
          $h_query = \Drupal::entityQuery('node')
            ->condition('status', 1)
            ->condition('type', 'project');
            
            $h_nids = $h_query->execute();
            $h_nodes = entity_load_multiple('node', $h_nids);

            $variables['home_project_lists'] = '';

             foreach( $h_nodes as $h_node ) {
      
               $h_title = $h_node->getTitle(); 

               $h_img_id = $h_node->get('field_project_header_background')->getValue();
               $h_img = File::load($h_img_id[0]['target_id']);
               $h_img_list = ImageStyle::load('project_list_image')->buildUrl($h_img->getFileUri());

              $variables['home_project_lists'] .= '<a class="rsImg" href="' . $h_img_list . '" data-rsw="566" data-rsh="375" data-caption="' . $h_title  . '"></a>' . "\n";
            }   
            
          //for featured work
          $featured_work_query = \Drupal::entityQuery('node')
            ->condition('status', 1)
            ->range(0, 1)
            ->condition('promote', 1)
            ->sort('created', 'DESC')
            ->condition('type', 'project');
            
            $featured_work_node_nid = $featured_work_query->execute();
            $featured_wn_nid = array_values($featured_work_node_nid);
            $featured_work_node = \Drupal::entityTypeManager()->getStorage('node')->load($featured_wn_nid[0]);
           // Kint::dump($featured_work_node_nid);

            //featured work side image url
           $f_img_id = $featured_work_node->get('field_side_img')->getValue();
           $f_img = File::load($f_img_id[0]['target_id']);
           $variables['featured_side_image'] = ImageStyle::load('project_side_img')->buildUrl($f_img->getFileUri());
    
           $featured_side_desc = $featured_work_node->get('field_side_desc')->getValue();
           $featured_node_desc = "\n";
           //Kint::dump($featured_side_desc);
             foreach( $featured_side_desc as $nu => $para){
              $paras = Drupal\paragraphs\Entity\Paragraph::load($para['target_id']); 
              $side_class = $paras->get('field_side_class')->getValue();
              $side_title = $paras->get('field_side_title')->getValue();
              $side_desc = $paras->get('field_side_desc')->getValue();
               
               if( $nu == 0 ){
    
                $featured_node_desc .= '<div class="row">
                  <div class="title col-sm-6 col-sm-push-6">
                    <h2>' . $side_title[0]['value'] . '</h2>
                    <p>' . $side_desc[0]['value'] . '</p>
                    </div>
                    </div>' . "\n"; 
                }else{

                $featured_node_desc .= '<div class="row">
                  <div class="feature col-sm-6 col-sm-push-6 clearfix">
                    <i class="icon gray ' . $side_class[0]['value'] .'"></i><h3>' . $side_title[0] ['value']. '</h3>
                    <p class="small">' . $side_desc[0]['value'] . '</p>
                  </div>
                </div>' . "\n";
                           
                 }

               }
                // featured node desc on side 
               $variables['featured_node_desc'] = $featured_node_desc;

               // featured node url alias
               $variables['featured_node_alias'] = \Drupal::service('path.alias_manager')->getAliasByPath('/node/'. $featured_wn_nid[0]);

        }

      // global variables 
       $eleConfig = \Drupal::config('ele_form.settings'); // at the top of the method
                
       $variables['home_first_title'] = $eleConfig->get('home_first_title');
       $variables['home_first_desc'] = $eleConfig->get('home_first_desc');
       $variables['home_second_title'] = $eleConfig->get('home_second_title');
       $variables['home_second_desc'] = $eleConfig->get('home_second_desc');
       $variables['home_third_title'] = $eleConfig->get('home_third_title');
       $variables['home_third_desc'] = $eleConfig->get('home_third_desc');

       $variables['home_second_what'] = $eleConfig->get('home_second_what');
       $variables['home_second_what_desc'] = $eleConfig->get('home_second_what_desc');
       $variables['home_second_who'] = $eleConfig->get('home_second_who');
       $variables['home_second_who_desc'] = $eleConfig->get('home_second_who_desc');
       $variables['home_second_how'] = $eleConfig->get('home_second_how');
       $variables['home_second_how_desc'] = $eleConfig->get('home_second_how_desc');

       $variables['home_third_small_title'] = $eleConfig->get('home_third_small_title');
       $variables['home_third_strong_title'] = $eleConfig->get('home_third_strong_title');

       $variables['home_work_section_title'] = $eleConfig->get('home_work_section_title');
       $variables['home_work_section_desc'] = $eleConfig->get('home_work_section_desc');

       $variables['home_contact_section_title'] = $eleConfig->get('home_contact_section_title');
       $variables['home_contact_section_desc'] = $eleConfig->get('home_contact_section_desc');

       $variables['site_footer_email'] = $eleConfig->get('site_footer_email');
       $variables['site_footer_phone'] = $eleConfig->get('site_footer_phone');
       $variables['site_footer_address'] = $eleConfig->get('site_footer_address');


}

/**
 *  Implemnts hoo_preprocess_node() for node
 *
 */

function ele_preprocess_views_view(&$variables){
      
      //taxonomy url alias for page lever
      $pj_terms = \Drupal::service('entity_type.manager')->getStorage("taxonomy_term")->loadTree('journal', $parent = 0, $max_depth = NULL, $load_entities = FALSE);

       $variables['page_journal_tax_list'] = '';

       foreach($pj_terms as $pj_term ){
         $page_term_alias = \Drupal::service('path.alias_manager')->getAliasByPath('/taxonomy/term/' . $pj_term->tid); // Gets pathauto term alias
         $variables['page_journal_tax_list'] .= '<li class="cat-item"><a href="' . $page_term_alias . '">' . $pj_term->name . '</a></li>'; 
       }

      //get current path for view title
      $current_path = \Drupal::service('path.current')->getPath();
      $path_alias = \Drupal::service('path.alias_manager')->getAliasByPath($current_path);
     
      $tax_name = explode("/", $path_alias);

      if(count( $tax_name) > 2){
      $variables['journal_view_title'] = t('Taxonomy:') .' '. $tax_name[2];
      }


      //recent journal on views page : taxonomy view and journal view

          $view_recent_journal_query = \Drupal::entityQuery('node')
                  ->condition('status', 1)
                  ->range(0, 6)
                  ->sort('created', 'DESC')
                  ->condition('type', 'journal');
       
              
              $view_recent_journal_nids = $view_recent_journal_query->execute();
              $view_recent_journal_nodes = entity_load_multiple('node', $view_recent_journal_nids);

              $variables['view_recent_journal'] = '';

               foreach( $view_recent_journal_nodes as $view_recent_journal_node ) {
                 //get node title
                 $view_recent_journal_title = $view_recent_journal_node->getTitle(); 
                 $view_recent_alias = \Drupal::service('path.alias_manager')->getAliasByPath('/node/'.$view_recent_journal_node->get('nid')->value);

                $variables['view_recent_journal'] .= '<li><a href="' . $view_recent_alias .'" title="' . $view_recent_journal_title . '">' . $view_recent_journal_title . '</a></li>';
              }
 
}




/**
 *  Implemnts hoo_preprocess_node() for node
 *
 */
function ele_preprocess_node(&$variables) {
 
        //taxonomy list in node--journal.html.twig
       $j_terms = \Drupal::service('entity_type.manager')->getStorage("taxonomy_term")->loadTree('journal', $parent = 0, $max_depth = NULL, $load_entities = FALSE);
       $variables['journal_tax_list'] = '';

       foreach($j_terms as $j_term ){
         $term_alias = \Drupal::service('path.alias_manager')->getAliasByPath('/taxonomy/term/' . $j_term->tid); // Gets pathauto term alias
         $variables['journal_tax_list'] .= '<li class="cat-item"><a href="' . $term_alias . '">' . $j_term->name . '</a></li>'; 
         }


        //recent journal for node--journal.html.twig
       if($variables['node']->getType() == 'journal'){ 

          $recent_journal_query = \Drupal::entityQuery('node')
                  ->condition('status', 1)
                  ->range(0, 6)
                  ->sort('created', 'DESC')
                  ->condition('type', 'journal');
       
              
              $recent_journal_nids = $recent_journal_query->execute();
              $recent_journal_nodes = entity_load_multiple('node', $recent_journal_nids);

              $variables['recent_journal'] = '';

               foreach( $recent_journal_nodes as $recent_journal_node ) {
                 //get node title
                 $recent_journal_title = $recent_journal_node->getTitle(); 
                 $recent_alias = \Drupal::service('path.alias_manager')->getAliasByPath('/node/'.$recent_journal_node->get('nid')->value);

                $variables['recent_journal'] .= '<li><a href="' . $recent_alias .'" title="' . $recent_journal_title . '">' . $recent_journal_title . '</a></li>';
              }
      }


  
  }



/**
* Implements hook_preprocess_menu() for menu--main.html.twig.
* https://www.drupal.org/node/2576827
*/
function ele_preprocess_menu(&$variables, $hook) {

  if ($hook == 'menu__main') {

        $current_path = \Drupal::request()->getRequestUri();
        $items = $variables['items'];

             foreach ($items as $key => $item) {
      // Set active to dom element if path of menu item matches current path
            if ($item['url']->toString() == $current_path) {
            // Add active link.
            $variables['items'][$key]['attributes']->addClass('current-page');
            } else {
                // Set active to dom element if path of menu item matches first part of current path
                $url_fragments = explode('/', $current_path);
                if (count($url_fragments) > 1 AND '/' . $url_fragments[1] == $item['url']->toString()) {

                  $variables['items'][$key]['attributes']->addClass('current-page');
                }
            }
      }
 
    }

}


/**
 * Implements hook_theme().
 */
function ele_theme($existing, $type, $theme, $path) {
      return [
          'contact_message_feedback_form' => [
          'render element' => 'form',
          ],
      ];
  }
