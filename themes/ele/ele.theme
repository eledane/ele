<?php
use Drupal\image\Entity\ImageStyle;
use Drupal\file\Entity\File;

//only for development,remove it when deploy on production
require_once('modules/devel/kint/kint/Kint.class.php');
/**
 * @file
 * Functions to support theming in the ele theme.
 */

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function ele_theme_suggestions_page_alter(array &$suggestions, array $variables) {

      if ($node = \Drupal::routeMatch()->getParameter('node')) {
            $content_type = $node->bundle();
            $suggestions[] = 'page__'.$content_type;
       }


  }


/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */

function ele_preprocess_page(&$variables) {

      $current_path = \Drupal::service('path.current')->getPath();
      $path_alias = \Drupal::service('path.alias_manager')->getAliasByPath($current_path);

      if( $path_alias == '/works'){
        
       $terms = \Drupal::service('entity_type.manager')->getStorage("taxonomy_term")->loadTree('project_category', $parent = 0, $max_depth = NULL, $load_entities = FALSE);

      $variables['product_category'] = '<li class="filter" data-filter="all">'. t('all'). '</li>' . "\n";

        foreach ( $terms as $term ){

          $variables['product_category'] .= '<li class="filter" data-filter="'. $term->name .'">'. $term->name .'</li>' . "\n";

          }
       
        $query = \Drupal::entityQuery('node')
            ->condition('status', 1)
            ->condition('type', 'project');
        
        $nids = $query->execute();
        $nodes = entity_load_multiple('node', $nids);

        $variables['project_lists'] = '';
         foreach( $nodes as $node ) {
           //get node title
           $title = $node->getTitle(); 

            //get taxonomy name
           $cat = $node->get('field_project_category')->getString();
           $term = \Drupal\taxonomy\Entity\Term::load($cat);
           $cat_name = $term->getName();

            //original image path
           $img_id = $node->get('field_project_header_background')->getValue();
           $img = File::load($img_id[0]['target_id']);


           //$img_header ='/' . drupal_get_path('theme','ele') . '/images/work/2.jpg';
           $img_header = ImageStyle::load('project_list_expand_img')->buildUrl($img->getFileUri());
          // $img_pure = explode("?itok=", $img_header );

           $img_list = ImageStyle::load('project_list_image')->buildUrl($img->getFileUri());
            //alias url of a node 
            $alias = \Drupal::service('path.alias_manager')->getAliasByPath('/node/'.$node->get('nid')->value);

            $variables['project_lists'] .= '<li class="thumbnail mix ' . $cat_name . ' mix_all">
              <a href="' . $img_header . '" class="lightbox" data-caption="<a href=\'' . $alias . '\'>' . $title . '</a>">
                <img src="' . $img_list . '" alt="thumbnail">
                <div class="projectinfo">
                  <div class="meta caption">
                    <h4>' . $title . '</h4>
                  </div>
                </div>
              </a>
            </li>' . "\n";
            
          }

        }

      $is_front = \Drupal::service('path.matcher')->isFrontPage();

        if($is_front == TRUE)  {

          $h_query = \Drupal::entityQuery('node')
            ->condition('status', 1)
            ->condition('type', 'project');
        
        $h_nids = $h_query->execute();
        $h_nodes = entity_load_multiple('node', $h_nids);

        $variables['home_project_lists'] = '';

         foreach( $h_nodes as $h_node ) {
  
           $h_title = $h_node->getTitle(); 

           $h_img_id = $h_node->get('field_project_header_background')->getValue();
           $h_img = File::load($h_img_id[0]['target_id']);
           $h_img_list = ImageStyle::load('project_list_image')->buildUrl($h_img->getFileUri());

            $variables['home_project_lists'] .= '<a class="rsImg" href="' . $h_img_list . '" data-rsw="566" data-rsh="375" data-caption="' . $h_title  . '"></a>' . "\n";


              }   
        
        }

}



/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
/*
function ele_preprocess_node(&$variable) {
   if ($variable['node']->getType() === 'project') {
     //$variables['header_bg'] = $variables['node']->field_project_header_backgroud;
      $node = $variable['node'];
//      $variables['header_bg'] = file_create_url($node->field_project_header_background->entity->getFileUri());
  }      
}
*/



/**
* Implements hook_preprocess_menu() for menu--main.html.twig.
* https://www.drupal.org/node/2576827
*/
function ele_preprocess_menu(&$variables, $hook) {

  if ($hook == 'menu__main') {

        $current_path = \Drupal::request()->getRequestUri();
        $items = $variables['items'];

             foreach ($items as $key => $item) {
      // Set active to dom element if path of menu item matches current path
            if ($item['url']->toString() == $current_path) {
            // Add active link.
            $variables['items'][$key]['attributes']->addClass('current-page');
            } else {
                // Set active to dom element if path of menu item matches first part of current path
                $url_fragments = explode('/', $current_path);
                if (count($url_fragments) > 1 AND '/' . $url_fragments[1] == $item['url']->toString()) {

                  $variables['items'][$key]['attributes']->addClass('current-page');
                }
            }
      }
 
    }

 }
